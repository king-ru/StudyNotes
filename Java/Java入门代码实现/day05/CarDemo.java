//java面向对象的三个特征：封装，继承，多态。
//以后开发，其实就是找对象用，没有对象，就创造一个对象。
//找对象，建立对象，使用对象，维护对象的关系。
//将多个功能写在一个对象中去。
/*
   类和对象的关系。
  // 类就是现实生活中事物的描述，对象就是这类事物，实实在在存在的个体。
   映射到java中，描述就是class定义的类，具体对象就是对应java在堆内存中用new建立的实体。实体即为对象，用于存储数据。
   //其实定义类，就是在描述事物，就是定义属性和行为。属性和行为成为类中的成员（成员变量和成员函数）；
   //属性是对应类中变量，行为对应的类中的函数（即为方法）；
   //对象的特点：封装数据。
*/

//需求：描述车的颜色，轮胎数
/*成员变量和局部变量
作用范围：成员变量作用于整个类中，局部变量作用于函数中，或者语句中；
在内存中的位置：成员变量在堆内存中，因为对象的存在才在内存中存在。
局部变量在栈内存中。
*/

class Car
{
	//描述颜色
	String color="red";
	int num=4;
	//运行行为；
    void run()
	 {
		System.out.println(color+".."+num);
     }
	 /*public static void main(String[] args)
	{
		 Car c=new Car();
		 c.color='white';
		 c.num=126;
	}*/
}//此时不用主函数是因为不用保证这个类的独立运行，也可以用一个主函数，在本类中使用本类对象。

class  CarDemo
{
	public static void main(String[] args) 
	{
		//生产汽车，在java中通过new操作符来完成。其实就是在堆内存中产生一个实体。
		Car c=new Car();    //c是一个类类型变量，。。类类型变量指向对象。
		//将已有的车改成蓝色，指挥该对象，在java中的指挥方式为对象.对象成员。
		c.color="blue";
		c.run();
		Car c1=new Car();
		c1.run();//凡出现new  就代表在内存中产生了一个新对象。
	    /*
		     Car c=new Car();
			 c.num=5;
			 Car c1=c;
			 c1.color=green;
			 c.run();  //此时会输出 green 5;     多个应用指向了同一个对象。
		*/
		//匿名对象使用方法一：当对象的调用方法只调用一次时，可以用匿名对象来完成，这样写比较简化。
		//如果对一个对象进行多个成员调用，必须给对象起个名字 。
		//匿名对象使用方式二：可以将匿名对象作为实际参数进行传递。

		/*
		 Car c1=new Car();
		c1.run();
		等价于该匿名对象
		new Car().run();
		*/
	}
}